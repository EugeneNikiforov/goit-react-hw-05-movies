{"version":3,"file":"static/js/284.1fc1252d.chunk.js","mappings":"sQACA,GAAgB,UAAY,8BAA8B,OAAS,4B,SCMpD,SAASA,EAAT,GAA6C,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC9C,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIH,GAkBZ,OACE,0BACE,kBAAMI,UAAWC,EAAAA,UAAkBC,SAlBlB,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAAMC,cAClC,KAAtBL,EAAWM,QAIfd,EAAgB,CACdW,MAAOH,IAETZ,EAAU,IACVC,EAAQ,IAPNkB,EAAAA,GAAAA,MAAY,2BAQf,EAMG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,kBAEd,mBAAQhB,UAAWC,EAAAA,OAAeY,KAAK,SAAvC,UACE,SAAC,MAAD,CAAUb,UAAWC,EAAAA,sBAK9B,C,aCzCD,EAAuB,yBAAvB,EAA2D,6BAA3D,EAAoG,8BAApG,EAA8I,8BAA9I,EAAyL,+BAAzL,EAAmO,6BAAnO,EAA4Q,8BCQ7P,SAASgB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,EAAsCC,EAAAA,SAAe,IAArD,eAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,EAAAA,UAAe,GAA7C,eAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,EAAAA,SAAe,GAAvC,eAAOK,EAAP,KAAaC,EAAb,KACMjB,EAAQS,EAASS,OAAOC,MAAM,GAuBpC,OArBAR,EAAAA,WAAgB,WAUVX,IACFe,GAAW,IACXK,EAAAA,EAAAA,IAAkBpB,EAAOgB,GACtBK,MAZiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,GAAuB,IAAnBA,EAAQC,OACV,OAAOpB,EAAAA,GAAAA,MAAY,uCAKrBU,GAAe,SAACW,GAAD,wBAAmBA,IAAnB,OAAiCF,GAAjC,GAChB,IAKMG,OAAM,SAACC,GACNrC,QAAQC,IAAIoC,EACb,IACAC,QAAQZ,GAAW,IAEzB,GAAE,CAACf,EAAOgB,KAGT,2BACGF,IAAW,SAACc,EAAA,EAAD,KACZ,SAAC7C,EAAD,CAAYC,UAAW6B,EAAgB5B,QAASgC,KAChD,eAAI1B,UAAWsC,EAAf,SACGjB,GACwB,IAAvBA,EAAYW,QACZX,EAAYkB,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACrC,OACE,eAAI1C,UAAWsC,EAAf,UACE,UAAC,KAAD,CACEK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAM3B,GACflB,UAAWsC,EAHb,WAKE,gBACEtC,UAAWsC,EACXQ,IACEJ,EAAW,yCAC2BA,GAD3B,UAEJK,GAETC,IAAKP,KAEP,eAAIzC,UAAWsC,EAAf,SAA+BG,IAdjC,QADgCD,EAmBrC,MAEmB,IAAvBnB,EAAYW,SACX,gBAAKhC,UAAWsC,EAAhB,UACE,mBACEtC,UAAWsC,EACXzB,KAAK,SACLoC,QAAS,WACPvB,GAAQ,SAACwB,GAAD,OAAUA,EAAO,CAAjB,GACT,EALH,2BAaT,C","sources":["webpack://react-homework-template/./src/components/searchForm/SearchForm.module.scss?bc8c","components/searchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/moviesPage/MoviesPage.module.scss?1939","pages/moviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SearchForm_container__ymro4\",\"search\":\"SearchForm_search__QdluL\"};","import { useSearchParams } from \"react-router-dom\";\n\nimport toast from \"react-hot-toast\";\nimport { ImSearch } from \"react-icons/im\";\nimport PropTypes from \"prop-types\";\nimport styled from \"./SearchForm.module.scss\";\n\nexport default function SearchForm({ newSearch, newPage }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(searchParams);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const movieValue = event.currentTarget.elements.query.value.toLowerCase();\n    if (movieValue.trim() === \"\") {\n      toast.error(\"Please enter some value!\");\n      return;\n    }\n    setSearchParams({\n      query: movieValue,\n    });\n    newSearch([]);\n    newPage(1);\n  };\n\n  \n\n  return (\n    <div>\n      <form className={styled.container} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          placeholder=\"Search films\"\n        />\n        <button className={styled.search} type=\"submit\">\n          <ImSearch className={styled.button_search} />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchForm.propTypes = {\n  newSearch: PropTypes.func.isRequired,\n  newPage: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__y5rBz\",\"filmItem\":\"MoviesPage_filmItem__8pblL\",\"titleFilm\":\"MoviesPage_titleFilm__KRTx4\",\"itemsLink\":\"MoviesPage_itemsLink__6dFOf\",\"filmImages\":\"MoviesPage_filmImages__IeeGS\",\"loadMore\":\"MoviesPage_loadMore__8OO6a\",\"buttonDiv\":\"MoviesPage_buttonDiv__c5GVd\"};","import { useLocation, Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { getFilmsForSearch } from \"../../services/services-api\";\nimport Loader from \"../../components/loader/Loader\";\nimport SearchForm from \"../../components/searchForm/SearchForm\";\nimport defaultPhoto from \"../../images/no-img.jpg\";\nimport toast from \"react-hot-toast\";\nimport css from \"./MoviesPage.module.scss\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [findedFilms, setFindedFilms] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [page, setPage] = React.useState(1);\n  const value = location.search.slice(1);\n  \n  React.useEffect(() => {\n    const pictureMethod = ({ results }) => {\n    if (results.length === 0) {\n      return toast.error(\"There is no result for your reqest!\");\n    } \n    // if (findedFilms === []) {\n    //   return setFindedFilms(results);\n    // }\n    setFindedFilms((prevState) => [...prevState, ...results]);\n  };\n    if (value) {\n      setLoading(true);\n      getFilmsForSearch(value, page)\n        .then(pictureMethod)\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    }\n  }, [value, page]);\n  \n  return (\n    <div>\n      {loading && <Loader />}\n      <SearchForm newSearch={setFindedFilms} newPage={setPage} />\n      <ul className={css.list}>\n        {findedFilms &&\n          findedFilms.length !== 0 &&\n          findedFilms.map(({ id, original_title, poster_path }) => {\n            return (\n              <li className={css.filmItem} key={id}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                  className={css.itemsLink}\n                >\n                  <img\n                    className={css.filmImages}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : `${defaultPhoto}`\n                    }\n                    alt={original_title}\n                  />\n                  <h3 className={css.titleFilm}>{original_title}</h3>;\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {findedFilms.length !== 0 && (\n        <div className={css.buttonDiv}>\n          <button\n            className={css.loadMore}\n            type=\"button\"\n            onClick={() => {\n              setPage((prev) => prev + 1);\n            }}\n          >\n            Next page\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["SearchForm","newSearch","newPage","useSearchParams","searchParams","setSearchParams","console","log","className","styled","onSubmit","event","preventDefault","movieValue","currentTarget","elements","query","value","toLowerCase","trim","toast","type","name","autoComplete","placeholder","MoviesPage","location","useLocation","React","findedFilms","setFindedFilms","loading","setLoading","page","setPage","search","slice","getFilmsForSearch","then","results","length","prevState","catch","error","finally","Loader","css","map","id","original_title","poster_path","to","state","from","src","defaultPhoto","alt","onClick","prev"],"sourceRoot":""}